# For testing
name: Test workflow

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get current date
        id: get_date
        run: |
          echo "::set-output name=build_date::$(date +%Y%m%d%H%M%S)"
          echo "::set-output name=release_date::$(date)"
      - name: Get pre-release tag
        id: get_tag
        run: echo "::set-output name=git_tag::v0.4-alpha"
      - name: Get upload url for assets
        id: get_url
        run: echo "::set-output name=upload_url::$(sh .github/workflows/get_upload_url.sh)"
      - name: Check if release for nightlies already exists
        id: check_release
        if: steps.get_url.outputs.upload_url != ''
        run: |
          echo "::set-output name=release_exists::true"
          echo "::set-output name=release_id::$(sh .github/workflows/get_release_id.sh)"
      - name: Delete nightly releases if it exists
        id: delete_release
        if: steps.check_release.outputs.release_exists == 'true'
        run: curl -X DELETE -H "Accept':' application/vnd.github.v3+json" -H "Authorization':' token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/SubZeroPL/PHours/releases/${{ steps.check_release.outputs.release_id }}
      - name: Download linux build
        id: download_artifacts_linux
        uses: actions/download-artifact@v2
        with:
          name: phours-ubuntu-latest
          path: linux
      - name: Create Release
        id: create_release
        if: steps.check_release.outputs.release_exists != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.get_tag.outputs.git_tag }}
          release_name: Nightly build
          draft: false
          prerelease: true
          body: Nightly build ${{ steps.get_date.outputs.release_date }}
      - name: Upload Linux Release
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux/phours.jar
          asset_name: PHours-linux_${{ steps.get_date.outputs.build_date }}.jar
          asset_content_type: application/java-archive
