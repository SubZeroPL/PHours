# This workflow will build a Java project with Maven after successful merge of PR, also creates version tag and release
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: After merge of a PR

on:
  pull_request:
    branches: [ master ]
    types: [ closed ]

jobs:
  build: # build application for windows, linux and macos and upload artifacts
    if: ((github.event.pull_request.merged == true) || (github.event_name == 'workflow_dispatch'))
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macOS-latest ]
      max-parallel: 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven
        id: maven_build
        run: mvn -B package --file pom.xml
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: phours-${{ matrix.os }}
          path: shade/phours.jar
  
  release:
    if: ((github.event.pull_request.merged == true) || (github.event_name == 'workflow_dispatch'))
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - name: Echo version
        run: echo "${{ steps.get_version.outputs.version }}"
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v0.4.4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Download windows build
        id: download_artifacts_win
        uses: actions/download-artifact@v4.1.7
        with:
          name: phours-windows-latest
          path: windows
      - name: Download linux build
        id: download_artifacts_linux
        uses: actions/download-artifact@v4.1.7
        with:
          name: phours-ubuntu-latest
          path: linux
      - name: Download mac build
        id: download_artifacts_mac
        uses: actions/download-artifact@v4.1.7
        with:
          name: phours-macOS-latest
          path: macos
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: PHours Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            ## Release
            PHours v${{ steps.get_version.outputs.version }}
            Changelog:
            ${{ steps.changelog.outputs.changelog }}
      - name: Upload Windows Release
        id: upload-release-asset-win
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: windows/phours.jar
          asset_name: PHours-windows_${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive
      - name: Upload Linux Release
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: linux/phours.jar
          asset_name: PHours-linux_${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive
      - name: Upload MacOS Release
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: macos/phours.jar
          asset_name: PHours-macos_${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive
